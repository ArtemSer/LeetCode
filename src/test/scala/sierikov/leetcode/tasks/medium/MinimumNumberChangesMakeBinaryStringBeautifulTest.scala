package sierikov.leetcode.tasks.medium

import org.scalatest.flatspec.AnyFlatSpec
import org.scalatest.matchers.should.Matchers

class MinimumNumberChangesMakeBinaryStringBeautifulTest extends AnyFlatSpec with Matchers {
  import MinimumNumberChangesMakeBinaryStringBeautiful._

  it should "pass example test" in {
    minChanges("1001") shouldBe 2
    minChanges("10") shouldBe 1
    minChanges("10010100000111001101011000000010110011") shouldBe 8
  }

  it should "pass stress test" in {
    val stress =
      "010100000000000011100100000110001110000110101111111000000010" +
        "001010110100010100101100101010110111000101001111001101111101" +
        "111001011111010011101100111011010000001010001111101011110001" +
        "010100111110011111001000010110101100001011101000010000011011" +
        "000110000000101100010101000010100000000011100010111101001101" +
        "010110101100111001101111100110111101110000010111000011110110" +
        "101111110011000001010011101010101111100000011001010100111010" +
        "001011101111011010000101010111000101010111100101111011011001" +
        "010110011001011100000101010101110101010100100011110100001011" +
        "0011010100000011111110000100111011100111"
    minChanges(stress) shouldBe 141
  }

}
